// Generated by CoffeeScript 1.3.3
(function() {
  var Boolean, Type, errors, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  errors = require('../errors');

  Type = require('./type');

  _ = require('lodash');

  Boolean = (function(_super) {

    __extends(Boolean, _super);

    function Boolean() {
      return Boolean.__super__.constructor.apply(this, arguments);
    }

    Boolean.prototype.isCorrectType = _.isBoolean;

    Boolean.prototype.coerce = function(thing) {
      var stripped;
      if (!_.isString(thing)) {
        throw new errors.ConversionError;
      }
      stripped = thing.replace(/\s+/g, '');
      switch (stripped) {
        case 'true':
          return true;
        case 'false':
          return false;
        default:
          throw new errors.ConversionError;
      }
    };

    return Boolean;

  })(Type);

  module.exports = Boolean;

}).call(this);
