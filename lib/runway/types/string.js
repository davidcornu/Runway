// Generated by CoffeeScript 1.3.3
(function() {
  var String, Type, errors, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  errors = require('../errors');

  Type = require('./type');

  _ = require('lodash');

  String = (function(_super) {

    __extends(String, _super);

    function String() {
      return String.__super__.constructor.apply(this, arguments);
    }

    String.prototype["default"] = function() {
      return '';
    };

    String.prototype.isCorrectType = _.isString;

    String.prototype.coerce = function(thing) {
      var stripped;
      if (_.isNumber(thing) || _.isBoolean(thing) || _.isDate(thing)) {
        return "" + thing;
      } else {
        throw new errors.ConversionError;
      }
      stripped = thing.replace(/\s+/g, '');
      switch (stripped) {
        case 'true':
          return true;
        case 'false':
          return false;
      }
    };

    String.prototype.isBlank = function() {
      return this.value.length === 0;
    };

    return String;

  })(Type);

  module.exports = String;

}).call(this);
