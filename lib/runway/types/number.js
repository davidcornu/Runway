// Generated by CoffeeScript 1.3.3
(function() {
  var RunwayNumber, RunwayType, errors, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  errors = require('./errors');

  RunwayType = require('./type');

  _ = require('lodash');

  RunwayNumber = (function(_super) {

    __extends(RunwayNumber, _super);

    function RunwayNumber() {
      return RunwayNumber.__super__.constructor.apply(this, arguments);
    }

    RunwayNumber.prototype.isCorrectType = _.isNumber;

    RunwayNumber.prototype.coerce = function(thing) {
      var attempt, isFloat, isInt, stripped;
      if (!_.isString(thing)) {
        throw new errors.ConversionError;
      }
      stripped = thing.replace(/\s+/g, '');
      isInt = /^\d+$/.test(stripped);
      isFloat = /^\d+\.\d+$/.test(stripped);
      if (!(isInt || isFloat)) {
        throw new errors.ConversionError;
      }
      attempt = isInt ? parseInt(stripped) : parseFloat(stripped);
      if (_.isNaN(attempt)) {
        throw new errors.ConversionError;
      }
      return attempt;
    };

    return RunwayNumber;

  })(RunwayType);

  module.exports = RunwayNumber;

}).call(this);
