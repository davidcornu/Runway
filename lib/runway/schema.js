// Generated by CoffeeScript 1.3.3
(function() {
  var Schema, errors, types, validTypes, _,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = require('lodash');

  types = require('./types');

  errors = require('./errors');

  validTypes = _.keys(types);

  Schema = (function() {

    function Schema(structure) {
      if (structure == null) {
        structure = {};
      }
      this.mapping = {};
      this.add(structure);
    }

    Schema.prototype.add = function(structure) {
      var attribute, type, _results;
      _results = [];
      for (attribute in structure) {
        type = structure[attribute];
        if (__indexOf.call(validTypes, type) >= 0) {
          _results.push(this.mapping[attribute] = types[type]);
        } else {
          throw new errors.AttributeError(attribute);
        }
      }
      return _results;
    };

    Schema.prototype.remove = function(attribute) {
      return delete this.mapping[attribute];
    };

    return Schema;

  })();

  module.exports = Schema;

}).call(this);
